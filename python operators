{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4c24b783-a2d2-4d22-bc65-7818e9f191d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7\n",
      "3\n",
      "10\n",
      "2.5\n",
      "1\n",
      "2\n"
     ]
    }
   ],
   "source": [
    "#arithmetic\n",
    "#addition\n",
    "a=5\n",
    "b=2\n",
    "c=a+b\n",
    "print(c)\n",
    "#subtraction\n",
    "c=a-b\n",
    "print(c)\n",
    "#multifi\n",
    "v=a*b\n",
    "print(v)\n",
    "#division\n",
    "d=a/b\n",
    "print(d)\n",
    "#modulus\n",
    "s=a%b\n",
    "print(s)\n",
    "#floor division\n",
    "m=a//b\n",
    "print(m)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "def4ca11-720a-460c-9bb5-894acae7aeec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "23\n",
      "11\n",
      "132\n",
      "11.0\n",
      "11.0\n",
      "3138428376721.0\n"
     ]
    }
   ],
   "source": [
    "#aassignment operators\n",
    "#addition\n",
    "a=11\n",
    "b=12\n",
    "a+=b\n",
    "print(a)\n",
    "#subtraction\n",
    "a-=b\n",
    "print(a)\n",
    "#multifi\n",
    "a*=b\n",
    "print(a)\n",
    "#division\n",
    "a/=b\n",
    "print(a)\n",
    "#modulus\n",
    "a%=b\n",
    "print(a)\n",
    "#exponent division\n",
    "a**=b\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1a2a58b5-fbf1-4fac-beaa-a31de104a8b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n",
      "True\n",
      "False\n",
      "True\n",
      "False\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "#comparsion operators\n",
    "a=20\n",
    "b=30\n",
    "#is equal to\n",
    "print(a==b)\n",
    "#not equal to\n",
    "print(a!=b)\n",
    "#greater than\n",
    "print(a>b)\n",
    "#less than\n",
    "print(a<b)\n",
    "#graterthan or eqal to\n",
    "print(a>=b)\n",
    "#less than or eqal to\n",
    "print(a<=b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "c75bf6a7-c0fc-4684-aa25-4d8c0314b293",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "#logical operators\n",
    "#and\n",
    "print(15>10 and 16<32)\n",
    "\n",
    "#or\n",
    "print(15>12 or 16<10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "28fab21e-af6e-4585-ad0a-0a645f567b18",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n",
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "#identits operator\n",
    "a='rama'\n",
    "b='sita'\n",
    "c='rama sita'\n",
    "d='krishna rama'\n",
    "print(a is c)\n",
    "print(a is not c)\n",
    "print(c is d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "ead4fba9-7e01-4d89-b75b-85f2f1af908f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "# membership operators\n",
    "#in\n",
    "#not in\n",
    "x='rama sita'\n",
    "y=[2,3,4,5,6,78,]\n",
    "print(a in x)\n",
    "print(2 in y)\n",
    "print('rama' not in y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03eb7b4f-84db-4518-bb51-df79ab46c8d9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
